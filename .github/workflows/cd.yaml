name: CD Part

on:
  push:
    branches:
      - main

jobs:
  CD:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: "us-east-1"
      ECR_REPO_URL: "557690625714.dkr.ecr.us-east-1.amazonaws.com/lambda-deployment-repo"
      S3_BUCKET: "demo-lambda-deployment-bucket-nov"
      LAMBDA_ZIP_KEY: "demo_lambda_function.zip"  # S3 key for the Lambda ZIP file

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Step 1: Pull Docker image from ECR
      - name: Pull Docker Image from ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO_URL
          docker pull $ECR_REPO_URL:latest

      # Step 2: Run Docker image to upload Lambda ZIP to S3
      - name: Run Docker Image to Upload ZIP to S3
        run: |
          docker run --rm -v $(pwd)/App:/app $ECR_REPO_URL:latest /bin/bash -c "
            cd /app && zip -r /tmp/demo_lambda_function.zip demo_lambda_function.py && 
            aws s3 cp /tmp/demo_lambda_function.zip s3://$S3_BUCKET/$LAMBDA_ZIP_KEY
          "

      # Step 3: Run Terraform to create Lambda function using S3 ZIP
      - name: Run Terraform Apply for Lambda Deployment
        run: |
          terraform init
          terraform apply -auto-approve
