name: CI/CD Pipeline for Lambda

on:
  workflow_dispatch:
    paths:
      - 'App/**' # Trigger on changes to the App folder
    branches:
      - main # Trigger on push to the main branch

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout code from GitHub repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up AWS CLI
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v2.1.0
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # Enable versioning on the S3 bucket
    - name: Enable versioning on S3 bucket
      run: |
        aws s3api put-bucket-versioning \
          --bucket my-lambda-deployment-bucket-prajakt \
          --versioning-configuration Status=Enabled

    # Install Python dependencies
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install linter
      run: |
        pip install flake8

    # Run linter to check for issues
    - name: Lint Python Code
      run: |
        flake8 App/ --max-line-length=120 --ignore=E302  

    # Zip the Lambda function code
    - name: Create zip of Lambda function
      run: |
        mkdir -p lambda_package
        cp App/demo_lambda_function.py lambda_package/
        cd lambda_package
        zip -r ../demo_lambda_function.zip .

    # Upload the zip file to S3
    - name: Upload to S3
      run: |
        aws s3 cp demo_lambda_function.zip s3://my-lambda-deployment-bucket-prajakt/lambda_code/demo_lambda_function.zip

    # Update Lambda function code from the S3 bucket
    - name: Update Lambda Function Code
      run: |
        aws lambda update-function-code \
          --function-name myLambdaFunction \
          --s3-bucket my-lambda-deployment-bucket-prajakt \
          --s3-key lambda_code/demo_lambda_function.zip

    # Grant S3 permission to invoke the Lambda function
    - name: Add Lambda Invoke Permission for S3
      run: |
        aws lambda add-permission \
          --function-name myLambdaFunction \
          --principal s3.amazonaws.com \
          --statement-id s3invoke \
          --action "lambda:InvokeFunction" \
          --source-arn arn:aws:s3:::my-lambda-deployment-bucket-prajakt \
          --source-account 557690625714

    # Create notification.json file for S3 trigger configuration
    - name: Create S3 Notification Configuration File
      run: |
        echo '{
          "LambdaFunctionConfigurations": [
            {
              "LambdaFunctionArn": "arn:aws:lambda:us-east-1:557690625714:function:myLambdaFunction",
              "Events": ["s3:ObjectCreated:*"],
              "Filter": {
                "Key": {
                  "FilterRules": [
                    {
                      "Name": "prefix",
                      "Value": "lambda_code/"
                    }
                  ]
                }
              }
            }
          ]
        }' > notification.json

    # Add S3 event notification to trigger Lambda
    - name: Add S3 Event Notification
      run: |
        aws s3api put-bucket-notification-configuration \
          --bucket my-lambda-deployment-bucket-prajakt \
          --notification-configuration file://notification.json



     # Grant S3 permission to invoke the Lambda function
    - name: Add Lambda Invoke Permission for S3
      run: |
        aws lambda add-permission \
          --function-name myLambdaFunction \
          --principal s3.amazonaws.com \
          --statement-id "s3invoke-$(date +%s)" \
          --action "lambda:InvokeFunction" \
          --source-arn arn:aws:s3:::my-lambda-deployment-bucket-prajakt \
          --source-account 557690625714  # Replace with your AWS account ID

